router.post(
  "/adminsignup",
  [body("email").isEmail(), body("password").isLength({ min: 5 })],
  async (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }

    try {
      let admin = await Admin.findOne({ email: req.body.email });
      if (admin) {
        return res
          .status(406)
          .json({ success: false, error: "Admin already exits" });
      }
      const salt = await bcrypt.genSalt(10);
      const secpass = await bcrypt.hash(req.body.password, salt);

      admin = await Admin.create({
        email: req.body.email,
        password: secpass,
      });

      res.json({
        success: true,
        admin,
        message: "your admin account is created succesfully",
      });
    } catch (error) {
      res.status(500).json({ sucess: false, error: "Internal server error" });
    }
  }
);